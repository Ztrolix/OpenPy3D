# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pygame --user
        pip install PyOpenGL --user
        pip install tk --user
        pip install pillow --user
        pip install tqdm --user 
        pip install alive-progress --user
        pip install pathlib --user
        pip install setuptools --user
        pip install zipp --user
        pip install urllib3 --user
        pip install requests --user
        pip install colorama --user
        pip install grapheme --user
        pip install certifi --user
        pip install idna --user
        pip install charset-normalizer --user
        pip install logging --user
        pip install noise --user
        pip install numba --user
        pip install moderngl --user
        pip install numpy --user
        pip install PyGLM --user
        pip install opensimplex --user
        pip install ursina --user
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
